{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ReservationService {\n  constructor() {\n    this.reservations = [];\n  }\n  //CRUD\n  getReservations() {\n    return this.reservations;\n  }\n  getReservation(id) {\n    return this.reservations.find(res => res.id === id);\n  }\n  addReservation(reservation) {\n    this.reservations.push(reservation);\n  }\n  deleteReservation(id) {\n    let index = this.reservations.findIndex(res => res.id === id);\n    this.reservations.splice(index, 1);\n  }\n  updateReservation(updateReservation) {\n    let index = this.reservations.findIndex(res => res.id === updateReservation.id);\n    this.reservations[index] = updateReservation;\n  }\n  static {\n    this.ɵfac = function ReservationService_Factory(t) {\n      return new (t || ReservationService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ReservationService,\n      factory: ReservationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ReservationService","constructor","reservations","getReservations","getReservation","id","find","res","addReservation","reservation","push","deleteReservation","index","findIndex","splice","updateReservation","factory","ɵfac","providedIn"],"sources":["/home/abhinavkatiyar/AngularHotelManagementApp/hotel-app/src/app/reservation/reservation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Reservation } from '../models/reservation';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n\n  constructor() { }\n\n  private reservations:Reservation[] = [];\n\n  //CRUD\n\n  getReservations():Reservation[] {\n    return this.reservations;\n  }\n\n  getReservation(id:string):Reservation | undefined{\n    return this.reservations.find(res => res.id === id);\n  }\n\n  addReservation(reservation:Reservation):void{\n    this.reservations.push(reservation);\n  }\n\n  deleteReservation(id:string):void{\n    let index = this.reservations.findIndex(res=> res.id === id);\n    this.reservations.splice(index,1);\n  }\n\n  updateReservation(updateReservation:Reservation):void{\n    let index = this.reservations.findIndex(res=> res.id === updateReservation.id);\n    this.reservations[index] = updateReservation;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAA;IAEQ,KAAAC,YAAY,GAAiB,EAAE;EAFvB;EAIhB;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,YAAY;EAC1B;EAEAE,cAAcA,CAACC,EAAS;IACtB,OAAO,IAAI,CAACH,YAAY,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;EACrD;EAEAG,cAAcA,CAACC,WAAuB;IACpC,IAAI,CAACP,YAAY,CAACQ,IAAI,CAACD,WAAW,CAAC;EACrC;EAEAE,iBAAiBA,CAACN,EAAS;IACzB,IAAIO,KAAK,GAAG,IAAI,CAACV,YAAY,CAACW,SAAS,CAACN,GAAG,IAAGA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAI,CAACH,YAAY,CAACY,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;EACnC;EAEAG,iBAAiBA,CAACA,iBAA6B;IAC7C,IAAIH,KAAK,GAAG,IAAI,CAACV,YAAY,CAACW,SAAS,CAACN,GAAG,IAAGA,GAAG,CAACF,EAAE,KAAKU,iBAAiB,CAACV,EAAE,CAAC;IAC9E,IAAI,CAACH,YAAY,CAACU,KAAK,CAAC,GAAGG,iBAAiB;EAC9C;;;uBA5BWf,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAgB,OAAA,EAAlBhB,kBAAkB,CAAAiB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
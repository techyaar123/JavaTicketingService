{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class ReservationFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.reservationForm = new FormGroup({});\n  }\n  ngOnInit() {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', Validators.required],\n      roomNumber: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.reservationForm.valid) {\n      console.log(\"valid\");\n    }\n  }\n  static {\n    this.ɵfac = function ReservationFormComponent_Factory(t) {\n      return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ReservationFormComponent,\n      selectors: [[\"app-reservation-form\"]],\n      decls: 23,\n      vars: 1,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"\"], [\"type\", \"date\", \"formControlName\", \"checkInDate\"], [\"type\", \"date\", \"formControlName\", \"checkOutDate\"], [\"type\", \"text\", \"formControlName\", \"guestName\"], [\"type\", \"text\", \"formControlName\", \"guestEmail\"], [\"type\", \"number\", \"formControlName\", \"roomNumber\"], [\"type\", \"submit\"]],\n      template: function ReservationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ReservationFormComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n          i0.ɵɵtext(3, \"Check In Date: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\")(6, \"label\", 1);\n          i0.ɵɵtext(7, \"Check Out Date: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\")(10, \"label\", 1);\n          i0.ɵɵtext(11, \"Guest Name: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\")(14, \"label\", 1);\n          i0.ɵɵtext(15, \"Guest Email: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\")(18, \"label\", 1);\n          i0.ɵɵtext(19, \"Room number: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"button\", 7);\n          i0.ɵɵtext(22, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormGroup","Validators","ReservationFormComponent","constructor","formBuilder","reservationForm","ngOnInit","group","checkInDate","required","checkOutDate","guestName","guestEmail","roomNumber","onSubmit","valid","console","log","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","ReservationFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ReservationFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["/home/abhinavkatiyar/AngularHotelManagementApp/hotel-app/src/app/reservation-form/reservation-form.component.ts","/home/abhinavkatiyar/AngularHotelManagementApp/hotel-app/src/app/reservation-form/reservation-form.component.html"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport { FormBuilder,FormGroup, Validator, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-reservation-form',\n  templateUrl: './reservation-form.component.html',\n  styleUrls: ['./reservation-form.component.css']\n})\nexport class ReservationFormComponent implements OnInit{\n \n\n\n  reservationForm: FormGroup= new FormGroup({});\n\n  constructor(private formBuilder:FormBuilder){\n\n  }\n  ngOnInit(): void {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: [ '',Validators.required],\n      checkOutDate: [ '',Validators.required],\n      guestName: ['' ,Validators.required],\n      guestEmail: ['' ,Validators.required],\n      roomNumber: [ '',Validators.required],\n\n    })\n  }\n\n  onSubmit(){\n    if(this.reservationForm.valid){\n      console.log(\"valid\");\n    }\n  }\n}\n","<form [formGroup]=\"reservationForm\" (ngSubmit)=\"onSubmit()\">\n\n\n    <div>\n\n        <label for=\"\">Check In Date: </label>\n        <input type=\"date\" formControlName=\"checkInDate\">\n    </div>\n    <div>\n\n        <label for=\"\">Check Out Date: </label>\n        <input type=\"date\" formControlName=\"checkOutDate\">\n    </div>\n    <div>\n\n        <label for=\"\">Guest Name: </label>\n        <input type=\"text\" formControlName=\"guestName\">\n    </div>\n    <div>\n\n        <label for=\"\">Guest Email: </label>\n        <input type=\"text\" formControlName=\"guestEmail\">\n    </div>\n    <div>\n\n        <label for=\"\">Room number: </label>\n        <input type=\"number\" formControlName=\"roomNumber\">\n    </div>\n   \n<button type=\"submit\">Submit</button>\n</form>\n"],"mappings":"AACA,SAAqBA,SAAS,EAAaC,UAAU,QAAQ,gBAAgB;;;AAM7E,OAAM,MAAOC,wBAAwB;EAMnCC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,eAAe,GAAa,IAAIL,SAAS,CAAC,EAAE,CAAC;EAI7C;EACAM,QAAQA,CAAA;IACN,IAAI,CAACD,eAAe,GAAG,IAAI,CAACD,WAAW,CAACG,KAAK,CAAC;MAC5CC,WAAW,EAAE,CAAE,EAAE,EAACP,UAAU,CAACQ,QAAQ,CAAC;MACtCC,YAAY,EAAE,CAAE,EAAE,EAACT,UAAU,CAACQ,QAAQ,CAAC;MACvCE,SAAS,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MACpCG,UAAU,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ,CAAC;MACrCI,UAAU,EAAE,CAAE,EAAE,EAACZ,UAAU,CAACQ,QAAQ;KAErC,CAAC;EACJ;EAEAK,QAAQA,CAAA;IACN,IAAG,IAAI,CAACT,eAAe,CAACU,KAAK,EAAC;MAC5BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;;EAExB;;;uBAxBWf,wBAAwB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAxBnB,wBAAwB;MAAAoB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCPrCV,EAAA,CAAAY,cAAA,cAA4D;UAAxBZ,EAAA,CAAAa,UAAA,sBAAAC,2DAAA;YAAA,OAAYH,GAAA,CAAAf,QAAA,EAAU;UAAA,EAAC;UAGvDI,EAAA,CAAAY,cAAA,UAAK;UAEaZ,EAAA,CAAAe,MAAA,sBAAe;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACrChB,EAAA,CAAAiB,SAAA,eAAiD;UACrDjB,EAAA,CAAAgB,YAAA,EAAM;UACNhB,EAAA,CAAAY,cAAA,UAAK;UAEaZ,EAAA,CAAAe,MAAA,uBAAgB;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACtChB,EAAA,CAAAiB,SAAA,eAAkD;UACtDjB,EAAA,CAAAgB,YAAA,EAAM;UACNhB,EAAA,CAAAY,cAAA,UAAK;UAEaZ,EAAA,CAAAe,MAAA,oBAAY;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAClChB,EAAA,CAAAiB,SAAA,gBAA+C;UACnDjB,EAAA,CAAAgB,YAAA,EAAM;UACNhB,EAAA,CAAAY,cAAA,WAAK;UAEaZ,EAAA,CAAAe,MAAA,qBAAa;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACnChB,EAAA,CAAAiB,SAAA,gBAAgD;UACpDjB,EAAA,CAAAgB,YAAA,EAAM;UACNhB,EAAA,CAAAY,cAAA,WAAK;UAEaZ,EAAA,CAAAe,MAAA,qBAAa;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACnChB,EAAA,CAAAiB,SAAA,gBAAkD;UACtDjB,EAAA,CAAAgB,YAAA,EAAM;UAEVhB,EAAA,CAAAY,cAAA,iBAAsB;UAAAZ,EAAA,CAAAe,MAAA,cAAM;UAAAf,EAAA,CAAAgB,YAAA,EAAS;;;UA7B/BhB,EAAA,CAAAkB,UAAA,cAAAP,GAAA,CAAAxB,eAAA,CAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ReservationFormComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Check In Date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Check In Date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ReservationFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.reservationForm = new FormGroup({});\n  }\n  ngOnInit() {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: ['', Validators.required],\n      checkOutDate: ['', Validators.required],\n      guestName: ['', Validators.required],\n      guestEmail: ['', [Validators.required, Validators.email]],\n      roomNumber: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.reservationForm.valid) {\n      console.log(\"valid\");\n    }\n  }\n  static {\n    this.ɵfac = function ReservationFormComponent_Factory(t) {\n      return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ReservationFormComponent,\n      selectors: [[\"app-reservation-form\"]],\n      decls: 25,\n      vars: 4,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"\"], [\"type\", \"date\", \"formControlName\", \"checkInDate\"], [4, \"ngIf\"], [\"type\", \"date\", \"formControlName\", \"checkOutDate\"], [\"type\", \"text\", \"formControlName\", \"guestName\"], [\"type\", \"text\", \"formControlName\", \"guestEmail\"], [\"type\", \"number\", \"formControlName\", \"roomNumber\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function ReservationFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ReservationFormComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n          i0.ɵɵtext(3, \"Check In Date: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"input\", 2);\n          i0.ɵɵtemplate(5, ReservationFormComponent_div_5_Template, 2, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\")(7, \"label\", 1);\n          i0.ɵɵtext(8, \"Check Out Date: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 4);\n          i0.ɵɵtemplate(10, ReservationFormComponent_div_10_Template, 2, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\")(12, \"label\", 1);\n          i0.ɵɵtext(13, \"Guest Name: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\")(16, \"label\", 1);\n          i0.ɵɵtext(17, \"Guest Email: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\")(20, \"label\", 1);\n          i0.ɵɵtext(21, \"Room number: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 8);\n          i0.ɵɵtext(24, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.reservationForm.get(\"checkInDate\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.reservationForm.get(\"checkInDate\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.reservationForm.get(\"checkOutDate\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.reservationForm.get(\"checkOutDate\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"disabled\", ctx.reservationForm.invalid);\n        }\n      },\n      dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ReservationFormComponent","constructor","formBuilder","reservationForm","ngOnInit","group","checkInDate","required","checkOutDate","guestName","guestEmail","email","roomNumber","onSubmit","valid","console","log","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","ReservationFormComponent_Template","rf","ctx","ɵɵlistener","ReservationFormComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","ReservationFormComponent_div_5_Template","ReservationFormComponent_div_10_Template","ɵɵproperty","ɵɵadvance","tmp_1_0","get","invalid","touched","tmp_2_0"],"sources":["/home/abhinavkatiyar/AngularHotelManagementApp/hotel-app/src/app/reservation-form/reservation-form.component.ts","/home/abhinavkatiyar/AngularHotelManagementApp/hotel-app/src/app/reservation-form/reservation-form.component.html"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport { FormBuilder,FormGroup, Validator, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-reservation-form',\n  templateUrl: './reservation-form.component.html',\n  styleUrls: ['./reservation-form.component.css']\n})\nexport class ReservationFormComponent implements OnInit{\n \n\n\n  reservationForm: FormGroup= new FormGroup({});\n\n  constructor(private formBuilder:FormBuilder){\n\n  }\n  ngOnInit(): void {\n    this.reservationForm = this.formBuilder.group({\n      checkInDate: [ '',Validators.required],\n      checkOutDate: [ '',Validators.required],\n      guestName: ['' ,Validators.required],\n      guestEmail: ['' ,[Validators.required,Validators.email]],\n      roomNumber: [ '',Validators.required],\n    })\n  }\n\n  onSubmit(){\n    if(this.reservationForm.valid){\n      console.log(\"valid\");\n    }\n  }\n}\n","<form [formGroup]=\"reservationForm\" (ngSubmit)=\"onSubmit()\">\n\n\n    <div>\n\n        <label for=\"\">Check In Date: </label>\n        <input type=\"date\" formControlName=\"checkInDate\">\n        <div *ngIf=\"reservationForm.get('checkInDate')?.invalid && reservationForm.get('checkInDate')?.touched\">\n            Check In Date is required       \n        </div>\n    </div>\n    <div>\n\n        <label for=\"\">Check Out Date: </label>\n        <input type=\"date\" formControlName=\"checkOutDate\">\n        <div *ngIf=\"reservationForm.get('checkOutDate')?.invalid && reservationForm.get('checkOutDate')?.touched\">\n            Check In Date is required       \n        </div>\n    </div>\n    <div>\n\n        <label for=\"\">Guest Name: </label>\n        <input type=\"text\" formControlName=\"guestName\">\n    </div>\n    <div>\n\n        <label for=\"\">Guest Email: </label>\n        <input type=\"text\" formControlName=\"guestEmail\">\n    </div>\n    <div>\n\n        <label for=\"\">Room number: </label>\n        <input type=\"number\" formControlName=\"roomNumber\">\n    </div>\n   \n<button type=\"submit\"  [disabled]=\"reservationForm.invalid\">Submit</button>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}